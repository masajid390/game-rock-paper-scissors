{"version":3,"sources":["theme/index.ts","components/lib/Button.tsx","components/lib/ActionBar.tsx","components/lib/Grid.tsx","context/game.tsx","components/game/Header.tsx","components/game/UserTurn.tsx","components/lib/icons/RockIcon.svg","components/lib/icons/PaperIcon.svg","components/lib/icons/ScissorIcon.svg","components/lib/icons/LizardIcon.svg","components/lib/icons/SpockIcon.svg","components/lib/icons/BGTriangle.svg","components/lib/icons/BGPentagon.svg","components/lib/icons/Close.svg","components/lib/WaveBox.tsx","context/app.tsx","components/game/ComputerTurn.tsx","components/lib/Modal.tsx","components/game/RulesModal.tsx","assets/game/rules/basic.svg","assets/game/rules/advance.svg","components/lib/StyledLink.tsx","components/game/index.tsx","hooks/app.ts","components/game/GameModes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","gutterSpace","borderRadius","colors","main","secondary","breakpoints","xs","sm","Button","styled","color","background","colorKeys","Object","keys","includes","RoundButtonContainer","size","gradientFromColor","gradientToColor","border","shadow","RoundButton","children","ActionBar","div","Column","justifyContent","css","alignItems","Row","GameContext","React","createContext","gameMode","GameProvider","value","useMemo","Provider","BaseHeaderContainer","Container","Title","TitleWord","h1","down","ScoreContainer","ScoreTitle","ScoreText","BaseHeader","Header","memo","score","title","useContext","map","text","key","Content","Background","img","IconButtonContainer","top","right","bottom","left","UserTurn","controls","backgroundSrc","userTurn","src","control","id","iconSrc","position","onClick","alt","Box","gradient","zIndex","parent","start","end","WaveBox","gradients","radius","stepHeight","length","index","childSize","spaceAround","AppContext","isMobile","AppProvider","EmptyControl","marginBottom","Text","fontSize","margin","Order","order","CelebrationContainer","Celebration","Array","fill","YouWin","playAgain","YouLose","ComputerTurn","timeToThink","userSelected","computerSelected","win","computerTurn","useEffect","timer","undefined","setTimeout","clearTimeout","yourZIndex","Modal","HeadingContainer","Heading","CloseButton","RulesModal","imageSrc","close","CloseIcon","StyledLink","Link","GameContent","HeaderContainer","FooterContainer","PlayArea","gameUI","step","appReducer","state","action","type","payload","userSelectedId","currentStep","computerSelectedId","Game","useReducer","dispatch","useState","showRules","setShowRules","getLocalStorage","useCallback","window","localStorage","getItem","JSON","parse","error","console","log","setLocalStorage","setItem","stringify","basicGameUI","PaperIcon","canBeat","ScissorIcon","RockIcon","BGTriangle","useBasicGameUI","advanceGameUI","SpockIcon","LizardIcon","BGPentagon","useAdvanceGameUI","find","scoreKey","toLocaleUpperCase","getScoreKey","existingScore","closeRules","availableControls","filter","randomIndex","Math","floor","random","newScore","to","BasicRules","AdvanceRules","GameContainer","useLocation","pathname","Levels","ControlContainer","HeaderText","YouVsComputer","GameModes","AppContainer","App","useBreakpoint","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4ee6208.chunk.js","sourcesContent":["import { DefaultTheme } from \"styled-components\";\n\nconst theme: DefaultTheme = {\n  gutterSpace: 8,\n  borderRadius: \"8px\",\n\n  colors: {\n    main: \"hsl(0, 0%, 100%)\",\n    secondary: \"hsl(229, 25%, 31%)\",\n  },\n\n  breakpoints: {\n    xs: \"0px\",\n    sm: \"640px\",\n  },\n};\n\nexport { theme };\n","import { FC } from \"react\";\nimport styled, { DefaultTheme } from \"styled-components\";\nconst Button = styled(\"button\")<{\n  color?: string;\n  background?: string;\n  theme: DefaultTheme;\n}>`\n  ${({ color, background, theme }) => {\n    const colorKeys = Object.keys(theme.colors);\n    if (color && colorKeys.includes(color)) {\n      color = theme.colors[color];\n    }\n    if (background && colorKeys.includes(background)) {\n      background = theme.colors[background];\n    }\n    return `\n      color: ${color ?? theme.colors.main};\n      border: 1px solid ${theme.colors.main};\n      border-radius:${theme.borderRadius};\n      background: ${background ?? \"transparent\"};\n      padding: ${theme.gutterSpace}px ${theme.gutterSpace * 4}px;\n      text-transform: uppercase;\n      outline: none;\n      cursor: pointer;\n      letter-spacing: 1.5px;\n      font-size: 12px;\n      font-weight: bold;\n    `;\n  }}\n`;\n\ninterface RoundButtonContainerProps {\n  size: number;\n  gradientFromColor: string;\n  gradientToColor: string;\n  border: number;\n  color?: string;\n  background?: string;\n}\nconst RoundButtonContainer = styled(\"div\")<RoundButtonContainerProps>`\n  ${({\n    theme: { colors },\n    size,\n    gradientFromColor,\n    gradientToColor,\n    border,\n    color,\n    background,\n  }) => {\n    const shadow = border / 2.5;\n    return `\n      width: ${size}px;\n      height: ${size}px;\n      align-items: center;\n      justify-content: center;\n      display: flex;\n      border-radius: 50%;\n      border: ${border}px solid ${gradientToColor};\n      border-bottom: ${border - shadow}px solid ${gradientToColor};\n      background: ${background ?? colors.main};\n      box-shadow: 0 ${shadow}px ${gradientFromColor}, inset 0 ${shadow}px lightgrey;\n      cursor: pointer;\n      user-select: none;\n      color: ${color ?? colors.secondary};\n  `;\n  }}\n`;\n\nexport interface RoundButtonProps extends RoundButtonContainerProps {\n  children?: React.ReactNode;\n}\nconst RoundButton: FC<RoundButtonProps> = ({\n  children,\n  size,\n  gradientFromColor,\n  gradientToColor,\n  border,\n}) => (\n  <RoundButtonContainer\n    size={size}\n    gradientFromColor={gradientFromColor}\n    gradientToColor={gradientToColor}\n    border={border}\n  >\n    {children}\n  </RoundButtonContainer>\n);\nexport { Button, RoundButton };\n","import styled from \"styled-components\";\n\nconst ActionBar = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport { ActionBar };\n","import styled, { css } from \"styled-components\";\n\ninterface FlexProps {\n  justifyContent?: string;\n  alignItems?: string;\n}\n\nconst Column = styled(\"div\")<FlexProps>`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  ${({ justifyContent }) =>\n    justifyContent &&\n    css`\n      justify-content: ${justifyContent};\n    `}\n  ${({ alignItems }) =>\n    alignItems &&\n    css`\n      align-items: ${alignItems};\n    `}\n`;\n\nconst Row = styled(\"div\")<FlexProps>`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  ${({ justifyContent }) =>\n    justifyContent &&\n    css`\n      justify-content: ${justifyContent};\n    `}\n  ${({ alignItems }) =>\n    alignItems &&\n    css`\n      align-items: ${alignItems};\n    `}\n`;\n\nexport { Column, Row };\n","import React, { FC, useMemo } from \"react\";\nimport { GameMode } from \"../interfaces/game\";\n\ninterface GameContextProps {\n  gameMode: GameMode;\n}\nconst GameContext = React.createContext<GameContextProps>({\n  gameMode: \"Basic\",\n});\n\nconst GameProvider: FC<GameContextProps> = ({ children, gameMode }) => {\n  const value = useMemo(() => ({ gameMode }), [gameMode]);\n  return <GameContext.Provider value={value}>{children}</GameContext.Provider>;\n};\n\nexport { GameContext, GameProvider };\n","import { FC, memo, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { down } from \"styled-breakpoints\";\nimport { Row } from \"../lib/Grid\";\nimport { GameContext } from \"../../context/game\";\n\nconst BaseHeaderContainer = styled.div`\n  border: 2px solid hsl(217, 16%, 45%);\n  border-radius: ${({ theme }) => `${theme.borderRadius}`};\n`;\n\nconst Container = styled.div`\n  padding: ${({ theme }) =>\n    `${theme.gutterSpace * 2}px ${theme.gutterSpace * 2}px ${\n      theme.gutterSpace * 2\n    }px ${theme.gutterSpace * 4}px`};\n`;\n\nconst Title = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst TitleWord = styled.h1`\n  margin: 0;\n  color: ${({ theme }) => `${theme.colors.main}`};\n  line-height: 0.8;\n  ${down(\"xs\")} {\n    font-size: 22px;\n  }\n`;\n\nconst ScoreContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => `${theme.colors.main}`};\n  border-radius: ${({ theme }) => `${theme.borderRadius}`};\n  padding: ${({ theme }) =>\n    `${theme.gutterSpace}px ${theme.gutterSpace * 4}px`};\n  ${down(\"xs\")} {\n    padding: ${({ theme }) =>\n      `${theme.gutterSpace}px ${theme.gutterSpace * 2}px`};\n  }\n`;\n\nconst ScoreTitle = styled.div`\n  color: hsl(229, 64%, 46%);\n  letter-spacing: 2px;\n  text-align: center;\n  font-size: 13px;\n  ${down(\"xs\")} {\n    font-size: 11px;\n  }\n`;\n\nconst ScoreText = styled.div`\n  color: ${({ theme }) => `${theme.colors.secondary}`};\n  font-weight: bold;\n  line-height: 1;\n  text-align: center;\n  font-size: 52px;\n  ${down(\"xs\")} {\n    font-size: 42px;\n  }\n`;\n\nconst BaseHeader: FC = ({ children }) => {\n  return <BaseHeaderContainer>{children}</BaseHeaderContainer>;\n};\n\ninterface HeaderProps {\n  score: number;\n}\nconst Header: FC<HeaderProps> = memo(({ score }) => {\n  const { gameMode } = useContext(GameContext);\n  let title: string[] = [\"Rock\", \"Paper\", \"Scissors\"];\n  if (gameMode === \"Advance\") {\n    title = [...title, \"Lizard\", \"Spock\"];\n  }\n  return (\n    <BaseHeader>\n      <Container>\n        <Row justifyContent=\"space-between\" alignItems=\"center\">\n          <Title>\n            {title.map((text, key) => (\n              <TitleWord key={key}>{text}</TitleWord>\n            ))}\n          </Title>\n          <ScoreContainer>\n            <ScoreTitle>Score</ScoreTitle>\n            <ScoreText>{score}</ScoreText>\n          </ScoreContainer>\n        </Row>\n      </Container>\n    </BaseHeader>\n  );\n});\n\nexport { BaseHeader, Header };\n","import styled from \"styled-components\";\nimport { RoundButton } from \"../lib/Button\";\nimport { FC, memo } from \"react\";\nimport { SelectionControl, IPosition } from \"../../interfaces/game\";\nimport { down } from \"styled-breakpoints\";\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nconst Content = styled.div`\n  position: relative;\n  justify-content: center;\n  display: flex;\n`;\n\nconst Background = styled.img`\n  ${down(\"xs\")} {\n    max-width: 80%;\n  }\n`;\n\nconst IconButtonContainer = styled(\"div\")<IPosition>`\n  ${({ top, right, bottom, left }) => `\n  position: absolute;\n  top: ${top}px;\n  right: ${right}px;\n  bottom: ${bottom}px;\n  left: ${left}px;\n  `}\n`;\n\ninterface UserTurnProps {\n  controls: SelectionControl[];\n  backgroundSrc: string;\n  userTurn: (userSelectedId: string) => void;\n}\n\nconst UserTurn: FC<UserTurnProps> = memo(\n  ({ controls, backgroundSrc, userTurn }) => {\n    return (\n      <Container>\n        <Content>\n          <Background src={backgroundSrc} />\n          {controls.map((control) => {\n            const {\n              id,\n              iconSrc,\n              gradientFromColor,\n              gradientToColor,\n              size,\n              border,\n              position: { top, right, bottom, left },\n            } = control;\n            return (\n              <IconButtonContainer\n                key={id}\n                top={top}\n                right={right}\n                bottom={bottom}\n                left={left}\n                onClick={() => userTurn(control.id)}\n              >\n                <RoundButton\n                  gradientFromColor={gradientFromColor}\n                  gradientToColor={gradientToColor}\n                  size={size}\n                  border={border}\n                >\n                  <img src={iconSrc} alt=\"Icon Button\" />\n                </RoundButton>\n              </IconButtonContainer>\n            );\n          })}\n        </Content>\n      </Container>\n    );\n  }\n);\n\nexport { UserTurn };\n","export default __webpack_public_path__ + \"static/media/RockIcon.ff5262ea.svg\";","export default __webpack_public_path__ + \"static/media/PaperIcon.53bfa43c.svg\";","export default __webpack_public_path__ + \"static/media/ScissorIcon.25a0183e.svg\";","export default __webpack_public_path__ + \"static/media/LizardIcon.0f83914c.svg\";","export default __webpack_public_path__ + \"static/media/SpockIcon.f4d7eee8.svg\";","export default __webpack_public_path__ + \"static/media/BGTriangle.36762c73.svg\";","export default __webpack_public_path__ + \"static/media/BGPentagon.1ad6d365.svg\";","export default __webpack_public_path__ + \"static/media/Close.bde602ec.svg\";","import { FC } from \"react\";\nimport styled from \"styled-components\";\n\ninterface GradientColor {\n  start: string;\n  end: string;\n}\n\nconst Box = styled(\"div\")<{\n  size: number;\n  gradient?: GradientColor;\n  zIndex: number;\n  top?: number;\n  left?: number;\n  parent?: boolean;\n}>`\n  ${({ size, gradient, zIndex, top, left, parent }) => `\n  width: ${size}px;\n  height: ${size}px;\n  border-radius: 50%;\n  background-image: radial-gradient(\n    circle,\n    ${gradient?.start},\n    ${gradient?.end}\n  );\n  z-index: ${zIndex};\n  top: ${top}px;\n  left: ${left}px;\n  position:${parent ? \"relative\" : \"absolute\"};\n`}\n`;\n\ninterface WaveBoxProps {\n  gradients: GradientColor[];\n  radius: number;\n  stepHeight: number;\n}\nconst WaveBox: FC<WaveBoxProps> = ({ gradients, radius, stepHeight }) => {\n  const size = radius + gradients.length * stepHeight;\n  return (\n    <Box size={size} zIndex={0} parent={true}>\n      {gradients.map((gradient, index) => {\n        const childSize = radius + (index + 1) * stepHeight;\n        const spaceAround = (size - childSize) / 2;\n        return (\n          <Box\n            key={index}\n            size={childSize}\n            gradient={gradient}\n            zIndex={gradients.length - index}\n            top={spaceAround}\n            left={spaceAround}\n          />\n        );\n      })}\n    </Box>\n  );\n};\n\nexport { WaveBox };\n","import React, { FC, useMemo } from \"react\";\n\ninterface AppContextProps {\n  isMobile: boolean | null;\n}\nconst AppContext = React.createContext<AppContextProps>({\n  isMobile: false,\n});\n\nconst AppProvider: FC<AppContextProps> = ({ children, isMobile }) => {\n  const value = useMemo(() => ({ isMobile }), [isMobile]);\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n};\n\nexport { AppContext, AppProvider };\n","import { FC, useEffect, memo, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { SelectionControl } from \"../../interfaces/game\";\nimport { Button, RoundButton } from \"../lib/Button\";\nimport { WaveBox } from \"../lib/WaveBox\";\nimport { AppContext } from \"../../context/app\";\nimport { GameContext } from \"../../context/game\";\n\nconst Container = styled(\"div\")<{ zIndex?: number }>`\n  ${({ zIndex = 1 }) => `\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    flex-direction: column;\n    z-index: ${zIndex};\n  `}\n`;\n\nconst Row = styled.div`\n  ${({ theme: { gutterSpace } }) => `\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    width: 100%;\n    margin: ${gutterSpace * 3}px 0;\n    position: relative;\n  `}\n`;\n\nconst Column = styled(\"div\")<{ zIndex?: number }>`\n  ${({ zIndex = 1 }) => `\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    z-index: ${zIndex};\n  `}\n`;\n\nconst EmptyControl = styled(\"div\")<{ size: number; marginBottom: number }>`\n  ${({ size, marginBottom }) => `\n      height: ${size}px;\n      width: ${size}px;\n      border-radius: 50%;\n      background: #3B4262;\n      margin: 20px;\n      margin-bottom: ${marginBottom}px;\n    `}\n`;\n\nconst Text = styled(\"div\")<{ fontSize: number; margin?: string }>`\n  ${({ fontSize, margin = \"32px 0\", theme: { colors } }) => `\n      font-size: ${fontSize}px;\n      color: ${colors.main};\n      margin: ${margin};\n    `}\n`;\n\nconst Order = styled(\"div\")<{ order: number }>`\n  ${({ order }) => `\n    order: ${order};\n  `}\n`;\n\nconst CelebrationContainer = styled(\"div\")<{ top: string }>`\n  ${({ top }) => `\n    position: absolute;\n    top: ${top};\n  `}\n`;\n\nconst Celebration: FC<{ isMobile: boolean | null }> = ({ isMobile }) => {\n  const { gameMode } = useContext(GameContext);\n  return (\n    <CelebrationContainer\n      top={\n        gameMode === \"Basic\"\n          ? isMobile\n            ? \"-41%\"\n            : \"-13%\"\n          : isMobile\n          ? \"-50%\"\n          : \"-24%\"\n      }\n    >\n      <WaveBox\n        gradients={Array(3).fill({\n          start: \"hsl(214deg 50% 34%)\",\n          end: \"hsl(214deg 63% 22%)\",\n        })}\n        stepHeight={isMobile ? 60 : 80}\n        radius={isMobile ? 120 : 180}\n      />\n    </CelebrationContainer>\n  );\n};\n\ninterface WinLossProps {\n  playAgain?: () => void;\n}\n\nconst YouWin: FC<WinLossProps> = ({ playAgain }) => (\n  <>\n    <Text fontSize={42} margin={\"16px 0\"}>\n      You Win\n    </Text>\n    <Button onClick={playAgain} color=\"secondary\" background=\"main\">\n      Play Again\n    </Button>\n  </>\n);\n\nconst YouLose: FC<WinLossProps> = ({ playAgain }) => (\n  <>\n    <Text fontSize={42} margin={\"16px 0\"}>\n      You Lose\n    </Text>\n    <Button onClick={playAgain} color=\"hsl(349, 71%, 52%)\" background=\"main\">\n      Play Again\n    </Button>\n  </>\n);\n\ninterface ComputerTurnProps {\n  timeToThink?: number;\n  userSelected: SelectionControl;\n  computerSelected?: SelectionControl;\n  win?: boolean;\n  computerTurn?: () => void;\n  playAgain?: () => void;\n}\n\nconst ComputerTurn: FC<ComputerTurnProps> = memo(\n  ({\n    timeToThink,\n    userSelected,\n    computerSelected,\n    win,\n    computerTurn,\n    playAgain,\n  }) => {\n    const { isMobile } = useContext(AppContext);\n\n    useEffect(() => {\n      let timer: NodeJS.Timeout;\n\n      if (timeToThink !== undefined && computerTurn) {\n        timer = setTimeout(computerTurn, timeToThink);\n      }\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [timeToThink, computerTurn]);\n\n    const yourZIndex = win === false ? 2 : 1;\n\n    return (\n      <Container>\n        <Row>\n          <Column zIndex={yourZIndex}>\n            <Container>\n              <Order order={isMobile ? 2 : 1}>\n                <Text fontSize={isMobile ? 16 : 22}>You Picked</Text>\n              </Order>\n              <Order order={isMobile ? 1 : 2}>\n                <RoundButton {...userSelected}>\n                  <img src={userSelected.iconSrc} alt=\"Icon Button\" />\n                </RoundButton>\n              </Order>\n            </Container>\n            {win && <Celebration isMobile={isMobile} />}\n          </Column>\n          {!isMobile && win !== undefined && (\n            <Column zIndex={3}>\n              {win ? (\n                <YouWin playAgain={playAgain} />\n              ) : (\n                <YouLose playAgain={playAgain} />\n              )}\n            </Column>\n          )}\n          <Column zIndex={1}>\n            <Container>\n              <Order order={isMobile ? 2 : 1}>\n                <Text fontSize={isMobile ? 16 : 22}>Computer Picked</Text>\n              </Order>\n              <Order order={isMobile ? 1 : 2}>\n                {computerSelected ? (\n                  <RoundButton {...computerSelected}>\n                    <img src={computerSelected.iconSrc} alt=\"Icon Button\" />\n                  </RoundButton>\n                ) : (\n                  <EmptyControl\n                    size={userSelected.size}\n                    marginBottom={isMobile ? 4 : 12}\n                  />\n                )}\n              </Order>\n            </Container>\n            {win === false && <Celebration isMobile={isMobile} />}\n          </Column>\n        </Row>\n        {isMobile && win !== undefined && (\n          <Row>\n            <Column>\n              {win ? (\n                <YouWin playAgain={playAgain} />\n              ) : (\n                <YouLose playAgain={playAgain} />\n              )}\n            </Column>\n          </Row>\n        )}\n      </Container>\n    );\n  }\n);\n\nexport { ComputerTurn };\n","import { FC } from \"react\";\nimport { down } from \"styled-breakpoints\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  position: fixed;\n  height: 100vh;\n  width: 100vw;\n  top: 0;\n  left: 0;\n  z-index: 100;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: hsla(229, 25%, 31%, 0.5);\n  ${down(\"xs\")} {\n    background: ${({ theme: { colors } }) => `${colors.main}`};\n  }\n`;\n\ninterface ModalProps {\n  children: JSX.Element;\n}\nconst Modal: FC<ModalProps> = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nexport { Modal };\n","import { FC, useContext } from \"react\";\nimport { CloseIcon } from \"../lib/icons\";\nimport { down } from \"styled-breakpoints\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../../context/app\";\n\nconst Container = styled.div`\n  ${({ theme: { colors, gutterSpace, borderRadius } }) => `\n    background: ${colors.main};\n    padding: ${gutterSpace * 4}px;\n    border-radius: ${borderRadius};\n`}\n`;\n\nconst HeadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${({ theme: { gutterSpace } }) => `${gutterSpace * 3}px`};\n  ${down(\"xs\")} {\n    justify-content: center;\n    margin-bottom: ${({ theme: { gutterSpace } }) => `${gutterSpace * 10}px`};\n  }\n`;\n\nconst Heading = styled.div`\n  ${({ theme: { colors } }) => `\n    color: ${colors.secondary};\n    font-size: 26px;\n    font-weight: bold;\n`}\n`;\n\nconst CloseButton = styled.div`\n  cursor: pointer;\n  text-align: center;\n  ${down(\"xs\")} {\n    margin-top: ${({ theme: { gutterSpace } }) => `${gutterSpace * 10}px`};\n  }\n`;\n\ninterface RulesModalProps {\n  imageSrc: string;\n  close: () => void;\n}\n\nconst RulesModal: FC<RulesModalProps> = ({ imageSrc, close }) => {\n  const { isMobile } = useContext(AppContext);\n  return (\n    <Container>\n      <HeadingContainer>\n        <Heading>Rules</Heading>\n        {!isMobile && (\n          <CloseButton onClick={close}>\n            <img src={CloseIcon} alt=\"Close\" />\n          </CloseButton>\n        )}\n      </HeadingContainer>\n      <img src={imageSrc} alt=\"Missing rules\" />\n      {isMobile && (\n        <CloseButton onClick={close}>\n          <img src={CloseIcon} alt=\"Close\" />\n        </CloseButton>\n      )}\n    </Container>\n  );\n};\n\nexport { RulesModal };\n","export default __webpack_public_path__ + \"static/media/basic.258b753f.svg\";","export default __webpack_public_path__ + \"static/media/advance.ca590b33.svg\";","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`;\nexport { StyledLink };\n","import {\n  FC,\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState,\n} from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"../lib/Button\";\nimport { ActionBar } from \"../lib/ActionBar\";\nimport { Header } from \"./Header\";\nimport { UserTurn } from \"./UserTurn\";\nimport {\n  BGTriangle,\n  PaperIcon,\n  RockIcon,\n  ScissorIcon,\n  SpockIcon,\n  LizardIcon,\n  BGPentagon,\n} from \"../lib/icons\";\nimport { GameUI, SelectionControl, GameMode } from \"../../interfaces/game\";\nimport { ComputerTurn } from \"./ComputerTurn\";\nimport { Modal } from \"../lib/Modal\";\nimport { RulesModal } from \"./RulesModal\";\nimport { useLocalStorage } from \"../../hooks/app\";\nimport BasicRules from \"../../assets/game/rules/basic.svg\";\nimport AdvanceRules from \"../../assets/game/rules/advance.svg\";\nimport { useLocation } from \"react-router-dom\";\nimport { StyledLink } from \"../lib/StyledLink\";\nimport { AppContext } from \"../../context/app\";\nimport { GameContext, GameProvider } from \"../../context/game\";\nimport { down } from \"styled-breakpoints\";\n\nconst Container = styled.div`\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst GameContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  max-width: 700px;\n  margin: 0 auto;\n`;\n\nconst HeaderContainer = styled.div`\n  ${({ theme: { gutterSpace } }) => `\n    position: fixed;\n    top: ${gutterSpace * 6}px;\n    left: ${gutterSpace * 6}px;\n    right: ${gutterSpace * 6}px;\n    z-index: 2;\n    max-width: 700px;\n    margin: 0 auto;\n  `}\n  ${down(\"xs\")} {\n    top: ${({ theme: { gutterSpace } }) => `${gutterSpace * 3}px;`};\n    left: ${({ theme: { gutterSpace } }) => `${gutterSpace * 3}px;`};\n    right: ${({ theme: { gutterSpace } }) => `${gutterSpace * 3}px;`};\n  }\n`;\n\nconst FooterContainer = styled.div`\n  ${({ theme: { gutterSpace } }) => `\n    position: fixed;\n    left: ${gutterSpace * 6}px;\n    right: ${gutterSpace * 6}px;\n    bottom: ${gutterSpace * 6}px;\n    z-index: 2;\n  `}\n  ${down(\"xs\")} {\n    left: ${({ theme: { gutterSpace } }) => `${gutterSpace * 3}px;`};\n    right: ${({ theme: { gutterSpace } }) => `${gutterSpace * 3}px;`};\n    bottom: ${({ theme: { gutterSpace } }) => `${gutterSpace * 3}px;`};\n  }\n`;\n\ntype Step = \"UserTurn\" | \"WaitingForComputerTurn\" | \"ComputerTurned\" | \"Result\";\ntype GameAction =\n  | \"UserCompletedTurn\"\n  | \"ComputerCompletedTurn\"\n  | \"Result\"\n  | \"PlayAgain\"\n  | \"SetScoreFromLocalStorage\";\n\nconst useBasicGameUI = (isMobile: boolean | null): GameUI => {\n  const size = isMobile ? 100 : 135;\n  const top = isMobile ? 60 : 80;\n  const left = isMobile ? 8 : 80;\n  const right = isMobile ? 8 : 70;\n  const bottom = isMobile ? 8 : 30;\n  const border = isMobile ? 15 : 20;\n  return useMemo(\n    () => ({\n      controls: [\n        {\n          id: \"paper\",\n          iconSrc: PaperIcon,\n          gradientFromColor: \"hsl(230, 89%, 62%)\",\n          gradientToColor: \"hsl(230, 89%, 65%)\",\n          size,\n          border,\n          position: { top: -top, left: -left },\n          canBeat: [\"rock\"],\n        },\n        {\n          id: \"scissor\",\n          iconSrc: ScissorIcon,\n          gradientFromColor: \"hsl(39, 89%, 49%)\",\n          gradientToColor: \"hsl(40, 84%, 53%)\",\n          size,\n          border,\n          position: { top: -top, right: -right },\n          canBeat: [\"paper\"],\n        },\n        {\n          id: \"rock\",\n          iconSrc: RockIcon,\n          gradientFromColor: \"hsl(349, 71%, 52%)\",\n          gradientToColor: \"hsl(349, 70%, 56%)\",\n          size,\n          border,\n          position: { bottom: -bottom },\n          canBeat: [\"scissor\"],\n        },\n      ],\n      backgroundSrc: BGTriangle,\n    }),\n    [size, top, left, right, bottom, border]\n  );\n};\n\nconst useAdvanceGameUI = (isMobile: boolean | null): GameUI => {\n  const size = isMobile ? 80 : 100;\n  const border = isMobile ? 15 : 20;\n  return useMemo(\n    () => ({\n      controls: [\n        {\n          id: \"scissor\",\n          iconSrc: ScissorIcon,\n          gradientFromColor: \"hsl(39, 89%, 49%)\",\n          gradientToColor: \"hsl(40, 84%, 53%)\",\n          size,\n          border,\n          position: { top: isMobile ? -50 : -60, right: isMobile ? 105 : 90 },\n          canBeat: [\"paper\", \"lizard\"],\n        },\n        {\n          id: \"spock\",\n          iconSrc: SpockIcon,\n          gradientFromColor: \"hsl(189, 59%, 53%)\",\n          gradientToColor: \"hsl(189, 58%, 57%)\",\n          size,\n          border,\n          position: { top: isMobile ? 40 : 55, left: isMobile ? -10 : -45 },\n          canBeat: [\"scissor\", \"rock\"],\n        },\n        {\n          id: \"paper\",\n          iconSrc: PaperIcon,\n          gradientFromColor: \"hsl(230, 89%, 62%)\",\n          gradientToColor: \"hsl(230, 89%, 65%)\",\n          size,\n          border,\n          position: { top: isMobile ? 40 : 55, right: isMobile ? -10 : -45 },\n          canBeat: [\"rock\", \"spock\"],\n        },\n        {\n          id: \"lizard\",\n          iconSrc: LizardIcon,\n          gradientFromColor: \"hsl(261, 73%, 60%)\",\n          gradientToColor: \"hsl(261, 72%, 63%)\",\n          size,\n          border,\n          position: { bottom: isMobile ? -40 : -45, left: isMobile ? 30 : 0 },\n          canBeat: [\"spock\", \"paper\"],\n        },\n        {\n          id: \"rock\",\n          iconSrc: RockIcon,\n          gradientFromColor: \"hsl(349, 71%, 52%)\",\n          gradientToColor: \"hsl(349, 70%, 56%)\",\n          size,\n          border,\n          position: { bottom: isMobile ? -40 : -45, right: isMobile ? 30 : 0 },\n          canBeat: [\"lizard\", \"scissor\"],\n        },\n      ],\n      backgroundSrc: BGPentagon,\n    }),\n    [size, border, isMobile]\n  );\n};\n\ninterface PlayAreaProps {\n  gameUI: GameUI;\n  step: Step;\n  userSelected?: SelectionControl;\n  computerSelected?: SelectionControl;\n  win?: boolean;\n  userTurn: (userSelectedId: string) => void;\n  computerTurn: () => void;\n  playAgain: () => void;\n}\nconst PlayArea: FC<PlayAreaProps> = ({\n  gameUI,\n  step,\n  userSelected,\n  computerSelected,\n  win,\n  userTurn,\n  computerTurn,\n  playAgain,\n}) => {\n  const { controls, backgroundSrc } = gameUI;\n  if (step === \"UserTurn\") {\n    return (\n      <UserTurn\n        controls={controls}\n        backgroundSrc={backgroundSrc}\n        userTurn={userTurn}\n      />\n    );\n  }\n\n  if (step === \"WaitingForComputerTurn\" && userSelected) {\n    return (\n      <ComputerTurn\n        timeToThink={1000}\n        userSelected={userSelected}\n        computerTurn={computerTurn}\n      />\n    );\n  }\n\n  if (step === \"ComputerTurned\" && userSelected) {\n    return (\n      <ComputerTurn\n        timeToThink={0}\n        userSelected={userSelected}\n        computerSelected={computerSelected}\n        computerTurn={computerTurn}\n      />\n    );\n  }\n\n  if (step === \"Result\" && userSelected) {\n    return (\n      <ComputerTurn\n        userSelected={userSelected}\n        computerSelected={computerSelected}\n        win={win}\n        playAgain={playAgain}\n      />\n    );\n  }\n\n  return <></>;\n};\n\ninterface GameState {\n  score: number;\n  currentStep: Step;\n  userSelectedId?: string;\n  computerSelectedId?: string;\n  win?: boolean;\n}\n\ninterface Action {\n  type: GameAction;\n  payload?: any;\n}\n\nconst appReducer = (state: GameState, action: Action): GameState => {\n  const { type, payload } = action;\n  switch (type) {\n    case \"UserCompletedTurn\": {\n      return {\n        ...state,\n        userSelectedId: payload,\n        currentStep: \"WaitingForComputerTurn\",\n      };\n    }\n    case \"ComputerCompletedTurn\": {\n      return {\n        ...state,\n        computerSelectedId: payload,\n        currentStep: \"ComputerTurned\",\n      };\n    }\n    case \"Result\": {\n      return {\n        ...state,\n        currentStep: \"Result\",\n        ...payload,\n      };\n    }\n    case \"PlayAgain\": {\n      return {\n        ...state,\n        userSelectedId: undefined,\n        computerSelectedId: undefined,\n        currentStep: \"UserTurn\",\n      };\n    }\n    case \"SetScoreFromLocalStorage\": {\n      return {\n        ...state,\n        score: payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\nconst SCORE_KEY = \"__ROCK_PAPER_SCISSORS_SCORE__\";\n\nconst getScoreKey = (gameMode: GameMode) =>\n  `${SCORE_KEY}${gameMode.toLocaleUpperCase()}__`;\n\nconst Game = memo(() => {\n  const [state, dispatch] = useReducer(appReducer, {\n    score: 0,\n    currentStep: \"UserTurn\",\n  });\n  const [showRules, setShowRules] = useState<boolean>(false);\n  const { isMobile } = useContext(AppContext);\n  const { gameMode } = useContext(GameContext);\n  const { getLocalStorage, setLocalStorage } = useLocalStorage();\n  const basicGameUI: GameUI = useBasicGameUI(isMobile);\n  const advanceGameUI: GameUI = useAdvanceGameUI(isMobile);\n  const gameUI: GameUI = gameMode === \"Advance\" ? advanceGameUI : basicGameUI;\n  const { controls } = gameUI;\n  const userSelected = controls.find(({ id }) => state.userSelectedId === id);\n  const computerSelected = controls.find(\n    ({ id }) => state.computerSelectedId === id\n  );\n  const step = state.currentStep;\n  const score = state.score;\n  const scoreKey = getScoreKey(gameMode);\n\n  useEffect(() => {\n    const existingScore = getLocalStorage(scoreKey);\n    if (existingScore !== null) {\n      dispatch({ type: \"SetScoreFromLocalStorage\", payload: existingScore });\n    }\n  }, [getLocalStorage, dispatch, scoreKey]);\n\n  const closeRules = useCallback(() => setShowRules(false), []);\n\n  const userTurn = useCallback(\n    (userSelectedId: string) =>\n      dispatch({ type: \"UserCompletedTurn\", payload: userSelectedId }),\n    [dispatch]\n  );\n\n  const computerTurn = useCallback(() => {\n    if (step === \"WaitingForComputerTurn\") {\n      const availableControls = controls.filter(\n        ({ id }) => userSelected?.id !== id\n      );\n      const randomIndex = Math.floor(Math.random() * availableControls.length);\n      dispatch({\n        type: \"ComputerCompletedTurn\",\n        payload: availableControls[randomIndex].id,\n      });\n    } else if (step === \"ComputerTurned\" && computerSelected) {\n      const win = userSelected?.canBeat.includes(computerSelected.id); // constructing win state\n      const newScore = win ? score + 1 : score - 1;\n      setLocalStorage(scoreKey, newScore);\n      dispatch({\n        type: \"Result\",\n        payload: { win, score: newScore },\n      });\n    }\n  }, [\n    dispatch,\n    controls,\n    userSelected,\n    computerSelected,\n    step,\n    score,\n    setLocalStorage,\n    scoreKey,\n  ]);\n\n  const playAgain = useCallback(() => dispatch({ type: \"PlayAgain\" }), [\n    dispatch,\n  ]);\n\n  return (\n    <Container>\n      <HeaderContainer>\n        <Header score={state.score} />\n      </HeaderContainer>\n      <GameContent>\n        <PlayArea\n          gameUI={gameUI}\n          step={state.currentStep}\n          userSelected={userSelected}\n          computerSelected={computerSelected}\n          win={state.win}\n          userTurn={userTurn}\n          computerTurn={computerTurn}\n          playAgain={playAgain}\n        />\n      </GameContent>\n      <FooterContainer>\n        <ActionBar>\n          <StyledLink to=\"/\">\n            <Button>Modes</Button>\n          </StyledLink>\n          <Button onClick={() => setShowRules(true)}>Rules</Button>\n        </ActionBar>\n      </FooterContainer>\n      {showRules && (\n        <Modal>\n          <RulesModal\n            close={closeRules}\n            imageSrc={gameMode === \"Basic\" ? BasicRules : AdvanceRules}\n          />\n        </Modal>\n      )}\n    </Container>\n  );\n});\n\nconst GameContainer = memo(() => {\n  const { pathname } = useLocation();\n  const gameMode: GameMode = pathname === \"/Advance\" ? \"Advance\" : \"Basic\";\n  return (\n    <GameProvider gameMode={gameMode}>\n      <Game />\n    </GameProvider>\n  );\n});\n\nexport { Game, GameContainer };\n","import { useCallback } from \"react\";\n\nexport const useLocalStorage = () => {\n  const getLocalStorage = useCallback((key: string): any => {\n    try {\n      const value = window.localStorage.getItem(key);\n      return value ? JSON.parse(value) : null;\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const setLocalStorage = useCallback((key: string, value: any) => {\n    try {\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return { getLocalStorage, setLocalStorage };\n};\n","import { memo, useContext } from \"react\";\nimport { down } from \"styled-breakpoints\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../../context/app\";\nimport { RoundButton, RoundButtonProps } from \"../lib/Button\";\nimport { Column, Row } from \"../lib/Grid\";\nimport { StyledLink } from \"../lib/StyledLink\";\nimport { BaseHeader } from \"./Header\";\n\nconst Container = styled.div`\n  height: 100%;\n`;\n\nconst Levels = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ControlContainer = styled.div`\n  ${({ theme: { gutterSpace } }) => `\n        margin: 0 ${gutterSpace * 5}px;\n        font-size: 28px;\n    `}\n  ${down(\"xs\")} {\n    font-size: 22px;\n  }\n`;\n\nconst Header = styled.h1`\n  ${({ theme: { colors, gutterSpace }, ...rest }) => `\n   color: ${colors.main};\n    text-align: center;\n    max-width: 500px;\n    margin: 0 auto;\n    position: fixed;\n    right: 0;\n    left: 0;\n    padding: ${gutterSpace * 6}px;\n  `}\n  ${down(\"xs\")} {\n    padding: ${({ theme: { gutterSpace } }) => `${gutterSpace * 3}px`};\n    font-size: 22px;\n  }\n`;\n\nconst HeaderText = styled.div`\n  padding: ${({ theme: { gutterSpace } }) => `${gutterSpace * 2}px;`};\n`;\n\nconst YouVsComputer = styled.h1`\n  margin: 0;\n  font-size: 32px;\n  margin-bottom: 16px;\n  color: hsl(40, 84%, 53%);\n  ${down(\"xs\")} {\n    font-size: 22px;\n  }\n`;\n\ninterface LevelControl extends RoundButtonProps {\n  text: string;\n}\n\nconst GameModes = memo(() => {\n  const { isMobile } = useContext(AppContext);\n  const size: number = isMobile ? 100 : 150;\n  const border: number = isMobile ? 15 : 20;\n  const controls: LevelControl[] = [\n    {\n      text: \"Basic\",\n      gradientFromColor: \"hsl(230, 89%, 62%)\",\n      gradientToColor: \"hsl(230, 89%, 65%)\",\n      size,\n      border,\n    },\n    {\n      text: \"Advance\",\n      gradientFromColor: \"hsl(349, 71%, 52%)\",\n      gradientToColor: \"hsl(349, 70%, 56%)\",\n      size,\n      border,\n    },\n  ];\n  return (\n    <Container>\n      <Header>\n        <BaseHeader>\n          <Row justifyContent=\"center\">\n            {[\"Rock\", \"Paper\", \"Scissors\"].map((text, key) => (\n              <HeaderText key={key}>{text}</HeaderText>\n            ))}\n          </Row>\n          <YouVsComputer>You vs Computer</YouVsComputer>\n        </BaseHeader>\n      </Header>\n      <Column justifyContent=\"center\">\n        <Levels>\n          {controls.map((control, key) => (\n            <ControlContainer key={key}>\n              <StyledLink to={`/${control.text}`}>\n                <RoundButton {...control}>{control.text}</RoundButton>\n              </StyledLink>\n            </ControlContainer>\n          ))}\n        </Levels>\n      </Column>\n    </Container>\n  );\n});\n\nexport { GameModes };\n","import { FC } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\nimport { GameContainer } from \"./components/game\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { GameModes } from \"./components/game/GameModes\";\nimport { useBreakpoint } from \"styled-breakpoints/react-styled\";\nimport { down } from \"styled-breakpoints\";\nimport { AppProvider } from \"./context/app\";\n\nconst AppContainer = styled.div`\n  background-image: radial-gradient(\n    circle,\n    hsl(214, 47%, 23%),\n    hsl(237, 49%, 15%)\n  );\n  height: 100vh;\n  width: 100vw;\n`;\n\nconst App: FC = () => {\n  const isMobile = useBreakpoint(down(\"xs\"));\n  return (\n    <ThemeProvider theme={theme}>\n      <AppProvider isMobile={isMobile}>\n        <AppContainer>\n          <Router>\n            <Switch>\n              <Route path={[\"/Basic\", \"/Advance\"]} component={GameContainer} />\n              <Route path=\"/\" component={GameModes} />\n            </Switch>\n          </Router>\n        </AppContainer>\n      </AppProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}